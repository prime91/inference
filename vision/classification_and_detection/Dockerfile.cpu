FROM ubuntu:16.04

ENV PYTHON_VERSION=3.7
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV PATH /opt/anaconda3/bin:$PATH

WORKDIR /root
ENV HOME /root

RUN apt-get update

RUN apt-get install -y --no-install-recommends \
      git \
      build-essential \
      software-properties-common \
      ca-certificates \
      wget \
      curl \
      htop \
      zip \
      unzip

RUN cd /opt && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O miniconda.sh && \
    /bin/bash ./miniconda.sh -b -p /opt/anaconda3 && \
    rm miniconda.sh && \
    /opt/anaconda3/bin/conda clean -tipsy && \
    ln -s /opt/anaconda3/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/anaconda3/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    conda config --set always_yes yes --set changeps1 no

ENV TVM_HOME=/tmp/tvm
ENV PYTHONPATH=$TVM_HOME/python:$TVM_HOME/topi/python:$TVM_HOME/nnvm/python
RUN apt-get update
RUN apt-get install -y --fix-missing python3 python3-dev python3-setuptools gcc libtinfo-dev zlib1g-dev build-essential cmake libedit-dev libxml2-dev apt-transport-https && \
     apt-get update

RUN cd / && \
    wget https://apt.llvm.org/llvm.sh && \
    chmod +x llvm.sh && \
    ./llvm.sh 10

RUN cd /tmp && \
    git clone --recursive https://github.com/apache/tvm && \
    cd tvm && \
    conda update -n base -c defaults conda && \
    conda env create --file conda/build-environment.yaml && \
    conda init bash && \
    exec bash && \
    conda activate tvm-build

RUN cd $TVM_HOME && \
    mkdir build && \
    cp cmake/config.cmake build/. && \
    echo 'set(USE_LLVM llvm-config-10)' >> build/config.cmake && \
    echo 'set(USE_GRAPH_RUNTIME_DEBUG ON)' >> build/config.cmake && \
#    echo 'set(USE_VULKAN ON)' >> build/config.cmake && \
    cd build && \
    cmake .. && \
    make -j4

RUN pip install decorator scipy pytest
# Commands for TVM end




RUN conda install pytorch-cpu torchvision-cpu -c pytorch
RUN pip install future pillow onnx opencv-python-headless tensorflow onnxruntime tvm
RUN pip install Cython && pip install pycocotools
RUN cd /tmp && \
    git clone --recursive https://github.com/mlcommons/inference && \
    cd inference/loadgen && \
    pip install pybind11 && \
    CFLAGS="-std=c++14" python setup.py install && \
    rm -rf mlperf

ENTRYPOINT ["/bin/bash"]
